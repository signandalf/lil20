def func5(arg47, arg48):
    var53 = func6(arg47, arg48)
    var68 = func7(arg48, arg47)
    var69 = func10()
    var70 = (var69 ^ (var53 ^ arg48)) | var53
    if var68 < arg47:
        var71 = (var68 | ((var68 & (arg48 + var53 | var69) ^ var53 - ((var68 | var69 & (var69 | var68) ^ ((arg47 & (-1301905571 - (arg48 - var70 + (var53 ^ arg48)) & -1758488390)) + 727214952) & arg48) ^ var69)) - 1051797773)) | var69
    else:
        var71 = ((860692518 | 671) + ((arg47 ^ arg48 + var53) ^ arg47 - arg47)) - (var53 + arg47)
    result = arg48 + arg48
    return result
def func10():
    func8()
    result = len(xrange(26))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -3
def func7(arg54, arg55):
    var56 = (arg54 + -850) - arg55 + 384068451
    var57 = var56 & (arg54 & (var56 | arg55))
    var58 = (arg55 ^ 738) - arg54 - 438
    var59 = var56 & arg55
    if var57 < var58:
        var60 = (arg54 + var58) & 762 & var58
    else:
        var60 = 116384851 ^ 450 + (-92 - var57)
    var61 = (var57 ^ var56) - var56
    var62 = arg55 & var61
    var63 = var57 & var57 ^ -991 + arg54
    var64 = arg54 + var58
    var65 = var64 | (var58 - var59)
    if var58 < var61:
        var66 = var58 & ((var65 | 640968547) ^ var56)
    else:
        var66 = ((-1979252494 & 981) - var62) + var65
    var67 = (var63 ^ var62) | var58
    result = var61 - var57
    return result
def func6(arg49, arg50):
    var51 = 0
    for var52 in range(24):
        if var52 < var51:
            var51 += (var51 + var52) | arg50
        else:
            var51 += (arg50 & 1) & var52
    return var51
def func1(arg1, arg2):
    var22 = func2(arg1, arg2)
    var23 = arg2 - ((arg2 | arg2) | arg1)
    var24 = arg1 ^ (226 ^ (arg2 ^ 1814773154))
    var25 = var22 + var24 - arg1 - 707029182
    var26 = -163 | arg1
    var27 = 204 + 908 ^ (2009515038 + 336)
    var28 = (var24 ^ var27) & var26
    var29 = var24 & 127
    var30 = var28 + ((arg2 - var25) & var26)
    var31 = ((var25 | arg2) - var28) + var28
    var32 = arg2 | var30 | var28 | var25
    var33 = var25 | var31 - var32 ^ var29
    var34 = var24 & var33 & (var24 ^ arg2)
    var35 = ((var25 ^ var28) & var23) - var28
    var36 = (var25 & var25) ^ var28 - var22
    var37 = var26 - arg1
    var38 = arg2 | var24
    var39 = var23 & arg1
    var40 = var25 - var28 - var24
    if var40 < var22:
        var41 = 789773684 ^ var30
    else:
        var41 = ((var36 + var28) + var30) + var25
    var42 = (var24 | var28) - (927850931 - -290573446)
    var43 = var32 ^ (var25 & -780976572) & var31
    var44 = (599 | var31) + var35
    var45 = var26 & var43 - (var31 | var33)
    var46 = (var33 - var22) + var45
    result = var29 + var39 & (arg2 & (var25 | var36)) - ((var36 & (var30 + var28) - var38) - var24)
    return result
def func2(arg3, arg4):
    var5 = 0
    for var21 in func3(arg4, arg3):
        var5 += (9 - var5) | var21
    return var5
def func4(arg8, arg9):
    result = arg8 & arg9
    return result
def func3(arg6, arg7):
    var10 = func4(arg6, 649)
    yield var10
    var11 = arg7 | -939 | arg6
    yield var11
    var12 = arg7 | arg7
    yield var12
    var13 = arg6 + var12
    yield var13
    var14 = ((479 | arg7) | var13) ^ var12
    yield var14
    var15 = arg7 & (-2031892327 | arg7) + var12
    yield var15
    var16 = (var11 & 955 ^ var13) - arg7
    yield var16
    var17 = (arg6 | arg6) & arg6 - var12
    yield var17
    var18 = var15 & var17 + -230 | arg6
    yield var18
    var19 = (-400 & arg7) & arg6
    yield var19
    var20 = var14 - 556960681 - var19 & var11
    yield var20
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 5'
    print 'arg_number: 47'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 72'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg47, arg48):
    var53 = func6(arg47, arg48)
    var68 = func7(arg48, arg47)
    var69 = func10()
    var70 = (var69 ^ (var53 ^ arg48)) | var53
    if var68 < arg47:
        var71 = (var68 | ((var68 & (arg48 + var53 | var69) ^ var53 - ((var68 | var69 & (var69 | var68) ^ ((arg47 & (-1301905571 - (arg48 - var70 + (var53 ^ arg48)) & -1758488390)) + 727214952) & arg48) ^ var69)) - 1051797773)) | var69
    else:
        var71 = ((860692518 | 671) + ((arg47 ^ arg48 + var53) ^ arg47 - arg47)) - (var53 + arg47)
    result = arg48 + arg48
    return result
def func10():
    func8()
    result = len(xrange(26))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -3
def func7(arg54, arg55):
    var56 = (arg54 + -850) - arg55 + 384068451
    var57 = var56 & (arg54 & (var56 | arg55))
    var58 = (arg55 ^ 738) - arg54 - 438
    var59 = var56 & arg55
    if var57 < var58:
        var60 = (arg54 + var58) & 762 & var58
    else:
        var60 = 116384851 ^ 450 + (-92 - var57)
    var61 = (var57 ^ var56) - var56
    var62 = arg55 & var61
    var63 = var57 & var57 ^ -991 + arg54
    var64 = arg54 + var58
    var65 = var64 | (var58 - var59)
    if var58 < var61:
        var66 = var58 & ((var65 | 640968547) ^ var56)
    else:
        var66 = ((-1979252494 & 981) - var62) + var65
    var67 = (var63 ^ var62) | var58
    result = var61 - var57
    return result
def func6(arg49, arg50):
    var51 = 0
    for var52 in range(24):
        if var52 < var51:
            var51 += (var51 + var52) | arg50
        else:
            var51 += (arg50 & 1) & var52
    return var51
def func1(arg1, arg2):
    var22 = func2(arg1, arg2)
    var23 = arg2 - ((arg2 | arg2) | arg1)
    var24 = arg1 ^ (226 ^ (arg2 ^ 1814773154))
    var25 = var22 + var24 - arg1 - 707029182
    var26 = -163 | arg1
    var27 = 204 + 908 ^ (2009515038 + 336)
    var28 = (var24 ^ var27) & var26
    var29 = var24 & 127
    var30 = var28 + ((arg2 - var25) & var26)
    var31 = ((var25 | arg2) - var28) + var28
    var32 = arg2 | var30 | var28 | var25
    var33 = var25 | var31 - var32 ^ var29
    var34 = var24 & var33 & (var24 ^ arg2)
    var35 = ((var25 ^ var28) & var23) - var28
    var36 = (var25 & var25) ^ var28 - var22
    var37 = var26 - arg1
    var38 = arg2 | var24
    var39 = var23 & arg1
    var40 = var25 - var28 - var24
    if var40 < var22:
        var41 = 789773684 ^ var30
    else:
        var41 = ((var36 + var28) + var30) + var25
    var42 = (var24 | var28) - (927850931 - -290573446)
    var43 = var32 ^ (var25 & -780976572) & var31
    var44 = (599 | var31) + var35
    var45 = var26 & var43 - (var31 | var33)
    var46 = (var33 - var22) + var45
    result = var29 + var39 & (arg2 & (var25 | var36)) - ((var36 & (var30 + var28) - var38) - var24)
    return result
def func2(arg3, arg4):
    var5 = 0
    for var21 in func3(arg4, arg3):
        var5 += (9 - var5) | var21
    return var5
def func4(arg8, arg9):
    result = arg8 & arg9
    return result
def func3(arg6, arg7):
    var10 = func4(arg6, 649)
    yield var10
    var11 = arg7 | -939 | arg6
    yield var11
    var12 = arg7 | arg7
    yield var12
    var13 = arg6 + var12
    yield var13
    var14 = ((479 | arg7) | var13) ^ var12
    yield var14
    var15 = arg7 & (-2031892327 | arg7) + var12
    yield var15
    var16 = (var11 & 955 ^ var13) - arg7
    yield var16
    var17 = (arg6 | arg6) & arg6 - var12
    yield var17
    var18 = var15 & var17 + -230 | arg6
    yield var18
    var19 = (-400 & arg7) & arg6
    yield var19
    var20 = var14 - 556960681 - var19 & var11
    yield var20
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 5'
    print 'arg_number: 47'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 72'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg47, arg48):
    var53 = func6(arg47, arg48)
    var68 = func7(arg48, arg47)
    var69 = func10()
    var70 = (var69 ^ (var53 ^ arg48)) | var53
    if var68 < arg47:
        var71 = (var68 | ((var68 & (arg48 + var53 | var69) ^ var53 - ((var68 | var69 & (var69 | var68) ^ ((arg47 & (-1301905571 - (arg48 - var70 + (var53 ^ arg48)) & -1758488390)) + 727214952) & arg48) ^ var69)) - 1051797773)) | var69
    else:
        var71 = ((860692518 | 671) + ((arg47 ^ arg48 + var53) ^ arg47 - arg47)) - (var53 + arg47)
    result = arg48 + arg48
    return result
def func10():
    func8()
    result = len(xrange(26))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -3
def func7(arg54, arg55):
    var56 = (arg54 + -850) - arg55 + 384068451
    var57 = var56 & (arg54 & (var56 | arg55))
    var58 = (arg55 ^ 738) - arg54 - 438
    var59 = var56 & arg55
    if var57 < var58:
        var60 = (arg54 + var58) & 762 & var58
    else:
        var60 = 116384851 ^ 450 + (-92 - var57)
    var61 = (var57 ^ var56) - var56
    var62 = arg55 & var61
    var63 = var57 & var57 ^ -991 + arg54
    var64 = arg54 + var58
    var65 = var64 | (var58 - var59)
    if var58 < var61:
        var66 = var58 & ((var65 | 640968547) ^ var56)
    else:
        var66 = ((-1979252494 & 981) - var62) + var65
    var67 = (var63 ^ var62) | var58
    result = var61 - var57
    return result
def func6(arg49, arg50):
    var51 = 0
    for var52 in range(24):
        if var52 < var51:
            var51 += (var51 + var52) | arg50
        else:
            var51 += (arg50 & 1) & var52
    return var51
def func1(arg1, arg2):
    var22 = func2(arg1, arg2)
    var23 = arg2 - ((arg2 | arg2) | arg1)
    var24 = arg1 ^ (226 ^ (arg2 ^ 1814773154))
    var25 = var22 + var24 - arg1 - 707029182
    var26 = -163 | arg1
    var27 = 204 + 908 ^ (2009515038 + 336)
    var28 = (var24 ^ var27) & var26
    var29 = var24 & 127
    var30 = var28 + ((arg2 - var25) & var26)
    var31 = ((var25 | arg2) - var28) + var28
    var32 = arg2 | var30 | var28 | var25
    var33 = var25 | var31 - var32 ^ var29
    var34 = var24 & var33 & (var24 ^ arg2)
    var35 = ((var25 ^ var28) & var23) - var28
    var36 = (var25 & var25) ^ var28 - var22
    var37 = var26 - arg1
    var38 = arg2 | var24
    var39 = var23 & arg1
    var40 = var25 - var28 - var24
    if var40 < var22:
        var41 = 789773684 ^ var30
    else:
        var41 = ((var36 + var28) + var30) + var25
    var42 = (var24 | var28) - (927850931 - -290573446)
    var43 = var32 ^ (var25 & -780976572) & var31
    var44 = (599 | var31) + var35
    var45 = var26 & var43 - (var31 | var33)
    var46 = (var33 - var22) + var45
    result = var29 + var39 & (arg2 & (var25 | var36)) - ((var36 & (var30 + var28) - var38) - var24)
    return result
def func2(arg3, arg4):
    var5 = 0
    for var21 in func3(arg4, arg3):
        var5 += (9 - var5) | var21
    return var5
def func4(arg8, arg9):
    result = arg8 & arg9
    return result
def func3(arg6, arg7):
    var10 = func4(arg6, 649)
    yield var10
    var11 = arg7 | -939 | arg6
    yield var11
    var12 = arg7 | arg7
    yield var12
    var13 = arg6 + var12
    yield var13
    var14 = ((479 | arg7) | var13) ^ var12
    yield var14
    var15 = arg7 & (-2031892327 | arg7) + var12
    yield var15
    var16 = (var11 & 955 ^ var13) - arg7
    yield var16
    var17 = (arg6 | arg6) & arg6 - var12
    yield var17
    var18 = var15 & var17 + -230 | arg6
    yield var18
    var19 = (-400 & arg7) & arg6
    yield var19
    var20 = var14 - 556960681 - var19 & var11
    yield var20
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 5'
    print 'arg_number: 47'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 72'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg47, arg48):
    var53 = func6(arg47, arg48)
    var68 = func7(arg48, arg47)
    var69 = func10()
    var70 = (var69 ^ (var53 ^ arg48)) | var53
    if var68 < arg47:
        var71 = (var68 | ((var68 & (arg48 + var53 | var69) ^ var53 - ((var68 | var69 & (var69 | var68) ^ ((arg47 & (-1301905571 - (arg48 - var70 + (var53 ^ arg48)) & -1758488390)) + 727214952) & arg48) ^ var69)) - 1051797773)) | var69
    else:
        var71 = ((860692518 | 671) + ((arg47 ^ arg48 + var53) ^ arg47 - arg47)) - (var53 + arg47)
    result = arg48 + arg48
    return result
def func10():
    func8()
    result = len(xrange(26))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -3
def func7(arg54, arg55):
    var56 = (arg54 + -850) - arg55 + 384068451
    var57 = var56 & (arg54 & (var56 | arg55))
    var58 = (arg55 ^ 738) - arg54 - 438
    var59 = var56 & arg55
    if var57 < var58:
        var60 = (arg54 + var58) & 762 & var58
    else:
        var60 = 116384851 ^ 450 + (-92 - var57)
    var61 = (var57 ^ var56) - var56
    var62 = arg55 & var61
    var63 = var57 & var57 ^ -991 + arg54
    var64 = arg54 + var58
    var65 = var64 | (var58 - var59)
    if var58 < var61:
        var66 = var58 & ((var65 | 640968547) ^ var56)
    else:
        var66 = ((-1979252494 & 981) - var62) + var65
    var67 = (var63 ^ var62) | var58
    result = var61 - var57
    return result
def func6(arg49, arg50):
    var51 = 0
    for var52 in range(24):
        if var52 < var51:
            var51 += (var51 + var52) | arg50
        else:
            var51 += (arg50 & 1) & var52
    return var51
def func1(arg1, arg2):
    var22 = func2(arg1, arg2)
    var23 = arg2 - ((arg2 | arg2) | arg1)
    var24 = arg1 ^ (226 ^ (arg2 ^ 1814773154))
    var25 = var22 + var24 - arg1 - 707029182
    var26 = -163 | arg1
    var27 = 204 + 908 ^ (2009515038 + 336)
    var28 = (var24 ^ var27) & var26
    var29 = var24 & 127
    var30 = var28 + ((arg2 - var25) & var26)
    var31 = ((var25 | arg2) - var28) + var28
    var32 = arg2 | var30 | var28 | var25
    var33 = var25 | var31 - var32 ^ var29
    var34 = var24 & var33 & (var24 ^ arg2)
    var35 = ((var25 ^ var28) & var23) - var28
    var36 = (var25 & var25) ^ var28 - var22
    var37 = var26 - arg1
    var38 = arg2 | var24
    var39 = var23 & arg1
    var40 = var25 - var28 - var24
    if var40 < var22:
        var41 = 789773684 ^ var30
    else:
        var41 = ((var36 + var28) + var30) + var25
    var42 = (var24 | var28) - (927850931 - -290573446)
    var43 = var32 ^ (var25 & -780976572) & var31
    var44 = (599 | var31) + var35
    var45 = var26 & var43 - (var31 | var33)
    var46 = (var33 - var22) + var45
    result = var29 + var39 & (arg2 & (var25 | var36)) - ((var36 & (var30 + var28) - var38) - var24)
    return result
def func2(arg3, arg4):
    var5 = 0
    for var21 in func3(arg4, arg3):
        var5 += (9 - var5) | var21
    return var5
def func4(arg8, arg9):
    result = arg8 & arg9
    return result
def func3(arg6, arg7):
    var10 = func4(arg6, 649)
    yield var10
    var11 = arg7 | -939 | arg6
    yield var11
    var12 = arg7 | arg7
    yield var12
    var13 = arg6 + var12
    yield var13
    var14 = ((479 | arg7) | var13) ^ var12
    yield var14
    var15 = arg7 & (-2031892327 | arg7) + var12
    yield var15
    var16 = (var11 & 955 ^ var13) - arg7
    yield var16
    var17 = (arg6 | arg6) & arg6 - var12
    yield var17
    var18 = var15 & var17 + -230 | arg6
    yield var18
    var19 = (-400 & arg7) & arg6
    yield var19
    var20 = var14 - 556960681 - var19 & var11
    yield var20
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 5'
    print 'arg_number: 47'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 72'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,def func5(arg47, arg48):
    var53 = func6(arg47, arg48)
    var68 = func7(arg48, arg47)
    var69 = func10()
    var70 = (var69 ^ (var53 ^ arg48)) | var53
    if var68 < arg47:
        var71 = (var68 | ((var68 & (arg48 + var53 | var69) ^ var53 - ((var68 | var69 & (var69 | var68) ^ ((arg47 & (-1301905571 - (arg48 - var70 + (var53 ^ arg48)) & -1758488390)) + 727214952) & arg48) ^ var69)) - 1051797773)) | var69
    else:
        var71 = ((860692518 | 671) + ((arg47 ^ arg48 + var53) ^ arg47 - arg47)) - (var53 + arg47)
    result = arg48 + arg48
    return result
def func10():
    func8()
    result = len(xrange(26))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -3
def func7(arg54, arg55):
    var56 = (arg54 + -850) - arg55 + 384068451
    var57 = var56 & (arg54 & (var56 | arg55))
    var58 = (arg55 ^ 738) - arg54 - 438
    var59 = var56 & arg55
    if var57 < var58:
        var60 = (arg54 + var58) & 762 & var58
    else:
        var60 = 116384851 ^ 450 + (-92 - var57)
    var61 = (var57 ^ var56) - var56
    var62 = arg55 & var61
    var63 = var57 & var57 ^ -991 + arg54
    var64 = arg54 + var58
    var65 = var64 | (var58 - var59)
    if var58 < var61:
        var66 = var58 & ((var65 | 640968547) ^ var56)
    else:
        var66 = ((-1979252494 & 981) - var62) + var65
    var67 = (var63 ^ var62) | var58
    result = var61 - var57
    return result
def func6(arg49, arg50):
    var51 = 0
    for var52 in range(24):
        if var52 < var51:
            var51 += (var51 + var52) | arg50
        else:
            var51 += (arg50 & 1) & var52
    return var51
def func1(arg1, arg2):
    var22 = func2(arg1, arg2)
    var23 = arg2 - ((arg2 | arg2) | arg1)
    var24 = arg1 ^ (226 ^ (arg2 ^ 1814773154))
    var25 = var22 + var24 - arg1 - 707029182
    var26 = -163 | arg1
    var27 = 204 + 908 ^ (2009515038 + 336)
    var28 = (var24 ^ var27) & var26
    var29 = var24 & 127
    var30 = var28 + ((arg2 - var25) & var26)
    var31 = ((var25 | arg2) - var28) + var28
    var32 = arg2 | var30 | var28 | var25
    var33 = var25 | var31 - var32 ^ var29
    var34 = var24 & var33 & (var24 ^ arg2)
    var35 = ((var25 ^ var28) & var23) - var28
    var36 = (var25 & var25) ^ var28 - var22
    var37 = var26 - arg1
    var38 = arg2 | var24
    var39 = var23 & arg1
    var40 = var25 - var28 - var24
    if var40 < var22:
        var41 = 789773684 ^ var30
    else:
        var41 = ((var36 + var28) + var30) + var25
    var42 = (var24 | var28) - (927850931 - -290573446)
    var43 = var32 ^ (var25 & -780976572) & var31
    var44 = (599 | var31) + var35
    var45 = var26 & var43 - (var31 | var33)
    var46 = (var33 - var22) + var45
    result = var29 + var39 & (arg2 & (var25 | var36)) - ((var36 & (var30 + var28) - var38) - var24)
    return result
def func2(arg3, arg4):
    var5 = 0
    for var21 in func3(arg4, arg3):
        var5 += (9 - var5) | var21
    return var5
def func4(arg8, arg9):
    result = arg8 & arg9
    return result
def func3(arg6, arg7):
    var10 = func4(arg6, 649)
    yield var10
    var11 = arg7 | -939 | arg6
    yield var11
    var12 = arg7 | arg7
    yield var12
    var13 = arg6 + var12
    yield var13
    var14 = ((479 | arg7) | var13) ^ var12
    yield var14
    var15 = arg7 & (-2031892327 | arg7) + var12
    yield var15
    var16 = (var11 & 955 ^ var13) - arg7
    yield var16
    var17 = (arg6 | arg6) & arg6 - var12
    yield var17
    var18 = var15 & var17 + -230 | arg6
    yield var18
    var19 = (-400 & arg7) & arg6
    yield var19
    var20 = var14 - 556960681 - var19 & var11
    yield var20
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 5'
    print 'arg_number: 47'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 72'
    for i in xrange(25000):
        x = 5
        x = func5(x, i)
        print x,
